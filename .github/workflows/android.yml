name: Android CI and CD

on:
  push:
    branches: 
      - main
      - qa
      - develop
  pull_request:
    branches: 
      - main
      - qa

env:
  AWS_DEFAULT_REGION: "us-east-2"

jobs:
  build:
    runs-on:
       - ubuntu-latest

    steps:
    - name : Check out Git Repository
      uses: actions/checkout@v3

    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Gradle Clean
      run: ./gradlew clean
      
    - name: Gradle Lint
      run: ./gradlew lint
      
    - name: Gradle Build and generating apk files
      run: ./gradlew build

    - name: Build AAB with Gradle
      run: ./gradlew bundleRelease    

    - name: Build apk
      run:  ./gradlew assembleDebug 
            
    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
   
   
    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
                
    - name: Date and Time
      run: echo "::set-output name=current_date_time::$(date +"%d-%m-%Y-%H-%I-%M-%S")"
      id : date

    - name: Copy APK files to a directory
      run: |
        mkdir -p apk-files/debug apk-files/debug
     
        cp ${{ github.workspace }}/app/build/outputs/apk/debug/*.apk ${{ github.workspace }}/apk-files/debug/
        mv ${{ github.workspace }}/apk-files/debug/*.apk ${{ github.workspace }}/apk-files/debug/app-debug-${{ steps.date.outputs.current_date_time }}.apk
     
        cp ${{ github.workspace }}/app/build/outputs/apk/release/*.apk ${{ github.workspace }}/apk-files/release/
        mv ${{ github.workspace }}/apk-files/release/*.apk ${{ github.workspace }}/apk-files/release/app-release-${{ steps.date.outputs.current_date_time }}.apk

      
    - name: Copy AAB files to a directory
      run: |
        mkdir -p aab-files/release
        cp ${{ github.workspace }}/app/build/outputs/bundle/release/*.aab ${{ github.workspace }}/aab-files/release/
        mv ${{ github.workspace }}/aab-files/release/*.aab ${{ github.workspace }}/aab-files/release/app-release-${{ steps.date.outputs.current_date_time }}.aab
        
    - name: Upload apk-files Directory
      uses: actions/upload-artifact@v2
      with:
        name: apk-files-artifactory
        path: ${{ github.workspace }}/apk-files/
        if-no-files-found: ignore
        
    - name: Upload aab-files Directory
      uses: actions/upload-artifact@v2
      with:
        name: aab-files-artifactory
        path: ${{ github.workspace }}/aab-files/
