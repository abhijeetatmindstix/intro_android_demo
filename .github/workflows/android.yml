name: Android CI and CD

on:
  push:
    branches: 
      - main
      - qa
      - develop
  pull_request:
    branches: 
      - main
      - qa

env:
  AWS_DEFAULT_REGION: "us-east-1"

jobs:
  build:
    runs-on:
       - ubuntu-latest

    steps:
    - name : Check out Git Repository
      uses: actions/checkout@v3

    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Gradle Clean
      run: ./gradlew clean
      
    - name: Gradle Lint
      run: ./gradlew lint
      
    - name: Gradle Build and generating apk files
      run: ./gradlew build

    - name: Build AAB with Gradle
      run: ./gradlew bundleRelease    

    - name: Build apk
      run:  ./gradlew assembleDebug 
            
    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
   
   
    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
                
    - name: Date and Time
      run: echo "::set-output name=current_date_time::$(date +"%d-%m-%Y-%H-%I-%M-%S")"
      id : date
    - name: Copy aab files to a directory
      run: |
         mkdir -p aab-files/bundle aab-files/release
         
         cp ${{ github.workspace }}/app/build/outputs/bundle/release/app-release.aab ${{ github.workspace }}/aab-files/bundle/app-release.aab 
         mv ${{ github.workspace }}/aab-files/bundle/app-release.aab ${{ github.workspace }}/aab-files/bundle/app-release-${{ steps.date.outputs.current_date_time }}.aab
        
    - name: Upload aab-files Directory
      uses: actions/upload-artifact@v3
      with:
        name: aab-files-artifactory
        path: ${{ github.workspace }}/aab-files/
        if-no-files-found: ignore        

    - name: Copy APK files to a directory
      run: |
         mkdir -p apk-files/debug apk-files/release
         
         cp ${{ github.workspace }}/app/build/outputs/apk/debug/app-debug.apk ${{ github.workspace }}/apk-files/debug/app-debug.apk 
         mv ${{ github.workspace }}/apk-files/debug/app-debug.apk ${{ github.workspace }}/apk-files/debug/app-debug-${{ steps.date.outputs.current_date_time }}.apk
         
         cp ${{ github.workspace }}/app/build/outputs/apk/release/app-release-unsigned.apk ${{ github.workspace }}/apk-files/release/app-release-unsigned.apk
         mv ${{ github.workspace }}/apk-files/release/app-release-unsigned.apk ${{ github.workspace }}/apk-files/release/app-release-unsigned-${{ steps.date.outputs.current_date_time }}.apk
      
    - name: Upload apk-files Directory
      uses: actions/upload-artifact@v3
      with:
        name: apk-files-artifactory
        path: ${{ github.workspace }}/apk-files/
        if-no-files-found: ignore
      

  deploy:
    runs-on: ubuntu-latest
    needs: build
      
    steps:
    - name : Check out Git Repository
      uses: actions/checkout@v2

    - name : Download aab-files Artifactory
      uses: actions/download-artifact@v3
      with:
        name: aab-files-artifactory
        path: ${{ github.workspace }}/aab-files/
    - name: Display structure of downloaded files of Artifact 
      run: ls -R
      working-directory: ${{ github.workspace }}/aab-files/      
      
    - name : Download apk-files Artifactory
      uses: actions/download-artifact@v3
      with:
        name: apk-files-artifactory
        path: ${{ github.workspace }}/apk-files/
    - name: Display structure of downloaded files of Artifact 
      run: ls -R
      working-directory: ${{ github.workspace }}/apk-files/
      
    - name: Public IP of Github Hosted Runner
      id: ip
      uses: haythem/public-ip@v1.3


  upload-to-s3:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}

    - name: Download aab-files Artifactory
      uses: actions/download-artifact@v3
      with:
        name: aab-files-artifactory
        path: ${{ github.workspace }}/aab-files/

    - name: Upload aab files to AWS S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
        source_dir: ${{ github.workspace }}/aab-files/
        bucket_url: s3://github-actions-artifact-bucket-123456789/aab-files/

    - name: Download apk-files Artifactory
      uses: actions/download-artifact@v3
      with:
        name: apk-files-artifactory
        path: ${{ github.workspace }}/apk-files/

    - name: Upload apk files to AWS S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
        source_dir: ${{ github.workspace }}/apk-files/
        bucket_url: s3://github-actions-artifact-bucket-123456789/apk-files/
